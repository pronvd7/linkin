generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model linkdata {
  id           Int       @id @default(autoincrement())
  pagedataid   Int?
  iconClass    String?   @db.VarChar
  displayText  String?   @db.VarChar
  linkUrl      String?   @db.VarChar
  bgColor      String?   @db.VarChar
  active       Boolean?  @default(true)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  textColor    String?   @db.VarChar
  accentColor  String?   @db.VarChar
  borderRadius String?   @db.VarChar
  orderIndex   Int       @default(autoincrement())
  pagedata     pagedata? @relation(fields: [pagedataid], references: [id])
}

model socialdata {
  id           Int       @id @default(autoincrement())
  pagedataid   Int?
  iconClass    String?   @db.VarChar
  linkUrl      String?   @db.VarChar
  bgColor      String?   @db.VarChar
  borderRadius String?   @db.VarChar
  accentColor  String?   @db.VarChar
  active       Boolean?  @default(true)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  orderIndex   Int       @default(autoincrement())
  pagedata     pagedata? @relation(fields: [pagedataid], references: [id])
}

model pagedata {
  id                          Int          @id @default(autoincrement())
  username                    String       @unique @db.VarChar(255)
  avatarUrl                   String?      @db.VarChar
  avatarheight                String?      @db.VarChar
  avatarwidth                 String?      @db.VarChar
  bgColor                     String?      @db.VarChar
  accentColor                 String?      @db.VarChar
  handlerText                 String?      @db.VarChar
  handlerLink                 String?      @db.VarChar
  footerText                  String?      @db.VarChar
  bgImgUrl                    String?      @db.VarChar
  handlerFontSize             String?      @db.VarChar
  handlerFontColor            String?      @db.VarChar
  active                      Boolean?     @default(true)
  fontFamily                  String?      @db.VarChar
  fontUrl                     String?      @db.VarChar
  created_at                  DateTime?    @default(now()) @db.Timestamptz(6)
  footerBgColor               String?      @db.VarChar
  footerTextColor             String?      @db.VarChar
  footerTextSize              String?      @db.VarChar
  handlerDescription          String?      @db.VarChar
  handlerDescriptionFontColor String?      @db.VarChar
  footerEnabled               Boolean?     @default(true)
  linkPadding                 String?      @db.VarChar
  avatarBorderColor           String?      @db.VarChar
  linktreeWidth               String?      @db.VarChar
  youtubeUrl                  String?      @db.VarChar
  googleAnalytic              String?      @db.VarChar
  facebookPixel              String?      @db.VarChar
  users                       users        @relation(fields: [username], references: [username])
  linkdata                    linkdata[]
  mediadata                   mediadata[]
  socialdata                  socialdata[]
}

model users {
  id         Int       @id @default(autoincrement())
  username   String    @unique @db.VarChar(255)
  password   String    @db.VarChar(60)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  email      String    @unique @db.VarChar(255)
  isAdmin    Boolean   @default(false)
  pagedata   pagedata?
}

model mediadata {
  id                   Int       @id @default(autoincrement())
  pagedataid           Int?
  imageUrl             String?   @db.VarChar
  imageCaption         String?   @db.VarChar
  imageDestinationUrl  String?   @db.VarChar
  active               Boolean?  @default(true)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  orderIndex           Int       @default(autoincrement())
  cloudinary_public_id String?   @db.VarChar
  pagedata             pagedata? @relation(fields: [pagedataid], references: [id])
}
